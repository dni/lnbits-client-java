/*
 * lnbits
 * API for LNbits, the free and open source bitcoin wallet and accounts system with plugins.
 *
 * The version of the OpenAPI document: 0.10.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateInvoiceData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-01T17:53:25.667+02:00[Europe/Vienna]")
public class CreateInvoiceData {
  public static final String SERIALIZED_NAME_OUT = "out";
  @SerializedName(SERIALIZED_NAME_OUT)
  private Boolean out = true;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit = "sat";

  public static final String SERIALIZED_NAME_DESCRIPTION_HASH = "description_hash";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_HASH)
  private String descriptionHash;

  public static final String SERIALIZED_NAME_UNHASHED_DESCRIPTION = "unhashed_description";
  @SerializedName(SERIALIZED_NAME_UNHASHED_DESCRIPTION)
  private String unhashedDescription;

  public static final String SERIALIZED_NAME_EXPIRY = "expiry";
  @SerializedName(SERIALIZED_NAME_EXPIRY)
  private Integer expiry;

  public static final String SERIALIZED_NAME_LNURL_CALLBACK = "lnurl_callback";
  @SerializedName(SERIALIZED_NAME_LNURL_CALLBACK)
  private String lnurlCallback;

  public static final String SERIALIZED_NAME_LNURL_BALANCE_CHECK = "lnurl_balance_check";
  @SerializedName(SERIALIZED_NAME_LNURL_BALANCE_CHECK)
  private String lnurlBalanceCheck;

  public static final String SERIALIZED_NAME_EXTRA = "extra";
  @SerializedName(SERIALIZED_NAME_EXTRA)
  private Object extra;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  private String webhook;

  public static final String SERIALIZED_NAME_INTERNAL = "internal";
  @SerializedName(SERIALIZED_NAME_INTERNAL)
  private Boolean internal = false;

  public static final String SERIALIZED_NAME_BOLT11 = "bolt11";
  @SerializedName(SERIALIZED_NAME_BOLT11)
  private String bolt11;

  public CreateInvoiceData() {
  }

  public CreateInvoiceData out(Boolean out) {
    
    this.out = out;
    return this;
  }

   /**
   * Get out
   * @return out
  **/
  @javax.annotation.Nullable
  public Boolean getOut() {
    return out;
  }


  public void setOut(Boolean out) {
    this.out = out;
  }


  public CreateInvoiceData amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * minimum: 0.0
   * @return amount
  **/
  @javax.annotation.Nullable
  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public CreateInvoiceData memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @javax.annotation.Nullable
  public String getMemo() {
    return memo;
  }


  public void setMemo(String memo) {
    this.memo = memo;
  }


  public CreateInvoiceData unit(String unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nullable
  public String getUnit() {
    return unit;
  }


  public void setUnit(String unit) {
    this.unit = unit;
  }


  public CreateInvoiceData descriptionHash(String descriptionHash) {
    
    this.descriptionHash = descriptionHash;
    return this;
  }

   /**
   * Get descriptionHash
   * @return descriptionHash
  **/
  @javax.annotation.Nullable
  public String getDescriptionHash() {
    return descriptionHash;
  }


  public void setDescriptionHash(String descriptionHash) {
    this.descriptionHash = descriptionHash;
  }


  public CreateInvoiceData unhashedDescription(String unhashedDescription) {
    
    this.unhashedDescription = unhashedDescription;
    return this;
  }

   /**
   * Get unhashedDescription
   * @return unhashedDescription
  **/
  @javax.annotation.Nullable
  public String getUnhashedDescription() {
    return unhashedDescription;
  }


  public void setUnhashedDescription(String unhashedDescription) {
    this.unhashedDescription = unhashedDescription;
  }


  public CreateInvoiceData expiry(Integer expiry) {
    
    this.expiry = expiry;
    return this;
  }

   /**
   * Get expiry
   * @return expiry
  **/
  @javax.annotation.Nullable
  public Integer getExpiry() {
    return expiry;
  }


  public void setExpiry(Integer expiry) {
    this.expiry = expiry;
  }


  public CreateInvoiceData lnurlCallback(String lnurlCallback) {
    
    this.lnurlCallback = lnurlCallback;
    return this;
  }

   /**
   * Get lnurlCallback
   * @return lnurlCallback
  **/
  @javax.annotation.Nullable
  public String getLnurlCallback() {
    return lnurlCallback;
  }


  public void setLnurlCallback(String lnurlCallback) {
    this.lnurlCallback = lnurlCallback;
  }


  public CreateInvoiceData lnurlBalanceCheck(String lnurlBalanceCheck) {
    
    this.lnurlBalanceCheck = lnurlBalanceCheck;
    return this;
  }

   /**
   * Get lnurlBalanceCheck
   * @return lnurlBalanceCheck
  **/
  @javax.annotation.Nullable
  public String getLnurlBalanceCheck() {
    return lnurlBalanceCheck;
  }


  public void setLnurlBalanceCheck(String lnurlBalanceCheck) {
    this.lnurlBalanceCheck = lnurlBalanceCheck;
  }


  public CreateInvoiceData extra(Object extra) {
    
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @javax.annotation.Nullable
  public Object getExtra() {
    return extra;
  }


  public void setExtra(Object extra) {
    this.extra = extra;
  }


  public CreateInvoiceData webhook(String webhook) {
    
    this.webhook = webhook;
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @javax.annotation.Nullable
  public String getWebhook() {
    return webhook;
  }


  public void setWebhook(String webhook) {
    this.webhook = webhook;
  }


  public CreateInvoiceData internal(Boolean internal) {
    
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nullable
  public Boolean getInternal() {
    return internal;
  }


  public void setInternal(Boolean internal) {
    this.internal = internal;
  }


  public CreateInvoiceData bolt11(String bolt11) {
    
    this.bolt11 = bolt11;
    return this;
  }

   /**
   * Get bolt11
   * @return bolt11
  **/
  @javax.annotation.Nullable
  public String getBolt11() {
    return bolt11;
  }


  public void setBolt11(String bolt11) {
    this.bolt11 = bolt11;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateInvoiceData createInvoiceData = (CreateInvoiceData) o;
    return Objects.equals(this.out, createInvoiceData.out) &&
        Objects.equals(this.amount, createInvoiceData.amount) &&
        Objects.equals(this.memo, createInvoiceData.memo) &&
        Objects.equals(this.unit, createInvoiceData.unit) &&
        Objects.equals(this.descriptionHash, createInvoiceData.descriptionHash) &&
        Objects.equals(this.unhashedDescription, createInvoiceData.unhashedDescription) &&
        Objects.equals(this.expiry, createInvoiceData.expiry) &&
        Objects.equals(this.lnurlCallback, createInvoiceData.lnurlCallback) &&
        Objects.equals(this.lnurlBalanceCheck, createInvoiceData.lnurlBalanceCheck) &&
        Objects.equals(this.extra, createInvoiceData.extra) &&
        Objects.equals(this.webhook, createInvoiceData.webhook) &&
        Objects.equals(this.internal, createInvoiceData.internal) &&
        Objects.equals(this.bolt11, createInvoiceData.bolt11);
  }

  @Override
  public int hashCode() {
    return Objects.hash(out, amount, memo, unit, descriptionHash, unhashedDescription, expiry, lnurlCallback, lnurlBalanceCheck, extra, webhook, internal, bolt11);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateInvoiceData {\n");
    sb.append("    out: ").append(toIndentedString(out)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    descriptionHash: ").append(toIndentedString(descriptionHash)).append("\n");
    sb.append("    unhashedDescription: ").append(toIndentedString(unhashedDescription)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    lnurlCallback: ").append(toIndentedString(lnurlCallback)).append("\n");
    sb.append("    lnurlBalanceCheck: ").append(toIndentedString(lnurlBalanceCheck)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    bolt11: ").append(toIndentedString(bolt11)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("out");
    openapiFields.add("amount");
    openapiFields.add("memo");
    openapiFields.add("unit");
    openapiFields.add("description_hash");
    openapiFields.add("unhashed_description");
    openapiFields.add("expiry");
    openapiFields.add("lnurl_callback");
    openapiFields.add("lnurl_balance_check");
    openapiFields.add("extra");
    openapiFields.add("webhook");
    openapiFields.add("internal");
    openapiFields.add("bolt11");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CreateInvoiceData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CreateInvoiceData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateInvoiceData is not found in the empty JSON string", CreateInvoiceData.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CreateInvoiceData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateInvoiceData` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("memo") != null && !jsonObj.get("memo").isJsonNull()) && !jsonObj.get("memo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo").toString()));
      }
      if ((jsonObj.get("unit") != null && !jsonObj.get("unit").isJsonNull()) && !jsonObj.get("unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unit").toString()));
      }
      if ((jsonObj.get("description_hash") != null && !jsonObj.get("description_hash").isJsonNull()) && !jsonObj.get("description_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description_hash").toString()));
      }
      if ((jsonObj.get("unhashed_description") != null && !jsonObj.get("unhashed_description").isJsonNull()) && !jsonObj.get("unhashed_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unhashed_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unhashed_description").toString()));
      }
      if ((jsonObj.get("lnurl_callback") != null && !jsonObj.get("lnurl_callback").isJsonNull()) && !jsonObj.get("lnurl_callback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lnurl_callback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lnurl_callback").toString()));
      }
      if ((jsonObj.get("lnurl_balance_check") != null && !jsonObj.get("lnurl_balance_check").isJsonNull()) && !jsonObj.get("lnurl_balance_check").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lnurl_balance_check` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lnurl_balance_check").toString()));
      }
      if ((jsonObj.get("webhook") != null && !jsonObj.get("webhook").isJsonNull()) && !jsonObj.get("webhook").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook").toString()));
      }
      if ((jsonObj.get("bolt11") != null && !jsonObj.get("bolt11").isJsonNull()) && !jsonObj.get("bolt11").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bolt11` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bolt11").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateInvoiceData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateInvoiceData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateInvoiceData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateInvoiceData.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateInvoiceData>() {
           @Override
           public void write(JsonWriter out, CreateInvoiceData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateInvoiceData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateInvoiceData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateInvoiceData
  * @throws IOException if the JSON string is invalid with respect to CreateInvoiceData
  */
  public static CreateInvoiceData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateInvoiceData.class);
  }

 /**
  * Convert an instance of CreateInvoiceData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

